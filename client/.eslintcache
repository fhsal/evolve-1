[{"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\index.js":"1","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\App.js":"2","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Landing.js":"3","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Mental.js":"4","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Physical.js":"5","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Resources.js":"6","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Health.js":"7","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\VideoLibrary.js":"8","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Podcast.js":"9","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Exercise.js":"10","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Footer\\index.js":"11","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Wrapper\\index.js":"12","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Navbar\\index.js":"13","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Hero\\index.js":"14","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Container\\index.js":"15","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Row\\index.js":"16","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Col\\index.js":"17","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\NavButtons\\index.js":"18","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\RandomQuote\\index.js":"19","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Journal\\index.js":"20","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\HealthGrid\\index.js":"21","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Podcasts\\index.js":"22","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Videos\\index.js":"23","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\ExerciseGrid\\index.js":"24","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\MyModal\\index.js":"25","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\utils\\API.js":"26","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Slider\\index.js":"27","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Picker\\index.js":"28"},{"size":216,"mtime":1610817571303,"results":"29","hashOfConfig":"30"},{"size":1235,"mtime":1610858959520,"results":"31","hashOfConfig":"30"},{"size":1527,"mtime":1610817571311,"results":"32","hashOfConfig":"30"},{"size":1351,"mtime":1610817571314,"results":"33","hashOfConfig":"30"},{"size":1461,"mtime":1610817571317,"results":"34","hashOfConfig":"30"},{"size":2339,"mtime":1610817571319,"results":"35","hashOfConfig":"30"},{"size":893,"mtime":1610817571309,"results":"36","hashOfConfig":"30"},{"size":791,"mtime":1610817571323,"results":"37","hashOfConfig":"30"},{"size":799,"mtime":1610817571318,"results":"38","hashOfConfig":"30"},{"size":942,"mtime":1610817571307,"results":"39","hashOfConfig":"30"},{"size":361,"mtime":1610858959524,"results":"40","hashOfConfig":"30"},{"size":163,"mtime":1610817571296,"results":"41","hashOfConfig":"30"},{"size":1274,"mtime":1611023187253,"results":"42","hashOfConfig":"30"},{"size":247,"mtime":1610817571166,"results":"43","hashOfConfig":"30"},{"size":165,"mtime":1610817571142,"results":"44","hashOfConfig":"30"},{"size":127,"mtime":1610817571242,"results":"45","hashOfConfig":"30"},{"size":204,"mtime":1610817571131,"results":"46","hashOfConfig":"30"},{"size":503,"mtime":1610817571176,"results":"47","hashOfConfig":"30"},{"size":1314,"mtime":1610817571217,"results":"48","hashOfConfig":"30"},{"size":1508,"mtime":1610817571169,"results":"49","hashOfConfig":"30"},{"size":5919,"mtime":1611025898459,"results":"50","hashOfConfig":"30"},{"size":2443,"mtime":1610817571214,"results":"51","hashOfConfig":"30"},{"size":2690,"mtime":1610817571262,"results":"52","hashOfConfig":"30"},{"size":5799,"mtime":1611025900241,"results":"53","hashOfConfig":"30"},{"size":1082,"mtime":1610601779060,"results":"54","hashOfConfig":"30"},{"size":290,"mtime":1611010370913,"results":"55","hashOfConfig":"30"},{"size":876,"mtime":1610817571259,"results":"56","hashOfConfig":"30"},{"size":1094,"mtime":1610858988465,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"df65oe",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\index.js",[],["119","120"],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\App.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Landing.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Mental.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Physical.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Resources.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Health.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\VideoLibrary.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Podcast.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\pages\\Exercise.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Wrapper\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Navbar\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Hero\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Container\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Row\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Col\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\NavButtons\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\RandomQuote\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Journal\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\HealthGrid\\index.js",["121"],"import React, { Component} from 'react';\nimport './style.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport Picker from '../Picker'\nimport { getWeek } from 'date-fns'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      yearWeek: '',\n      gridData: '',\n      saveFlag: false,\n      columnDefs: [\n        {\n          headerName: 'Day',\n          field: 'day',\n          wrapText: true,\n          resizable: true,\n          width: 130,\n\n          },\n        {\n          headerName: 'BP Systolic',\n          field: 'bpSystolic',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 100,\n          type: 'numberColumn' \n        },\n        {\n          headerName: 'BP Diastolic',\n          field: 'bpDiastolic',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 100,\n        },\n        {\n          headerName: 'Weight',\n          field: 'weight',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 80,\n        },\n        {\n          headerName: 'Sugar AM',\n          field: 'sugarAM',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 80,\n        },\n        {\n          headerName: 'Sugar PM',\n          field: 'sugarPM',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 80,\n        },\n        {\n          headerName: 'Sleep hrs',\n          field: 'sleep',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 80,\n        },\n        {\n          headerName: 'Notes',\n          field: 'notes',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 500,\n        }\n      ],\n      rowData: [],\n\n    rowHeight: 60,\n    animateRows: true,\n    };\n  }\n\ncomponentDidMount() {\n  \n    let today = new Date();\n    let startYearWeek = today.toJSON().substring(0, 4) + \"-\" + getWeek(today)\n  \n    this.setState({yearWeek: startYearWeek}, this.getData)\n\n    }\n\ngetData = () =>{\n  fetch('/api/health/' + this.state.yearWeek, {\n    headers : { \n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }})\n    .then(result => result.json())\n    .then(rowData => this.setState({ rowData:rowData.healthData }))\n    .then(saveFlag => this.setState({saveFlag: true}))\n    .catch((error)=>\n    {\n      fetch('template.json', {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }})\n        .then(result => result.json())\n        .then(rowData => this.setState({ rowData }))\n        .then(saveFlag => this.setState({saveFlag: false}))\n    }\n    )\n}\n\nsaveWeek = (gridData) =>{\n  fetch('/api/health/', {\n    headers : {'Content-Type': 'application/json', 'Accept': 'application/json'},\n    method: 'POST',\n    body: gridData})\n    .then(result => result.json())\n    .then(rowData => this.setState({ rowData }))\n    .catch((error)=>{\n      console.log(error)\n})\nthis.getData()\n}\n\neraseWeek = () =>{\n  fetch('/api/health/' + this.state.yearWeek, {\n    method: 'DELETE',\n  })\n    .then(result => result.text())\n    .then(result=> console.log(\"delete result: \" + result))\n    .catch((error)=>{\n      console.log(error)\n})\nthis.getData()\n}\n\nclearGrid = () => {\n\n  fetch('template.json', {\n    headers : { \n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }})\n    .then(result => result.json())\n    .then(rowData => this.setState({ rowData }))\n    .then(saveFlag => this.setState({saveFlag: false}))\n}\n\nreplaceWeek = (gridData) =>{\n  console.log(this.state.saveFlag)\n  if (!this.state.saveFlag) { this.saveWeek(gridData)\n  }\n  else {\n    this.eraseWeek()\n    this.saveWeek(gridData)\n  }\n}\n\n  onReplaceButtonClick = () => {\n    this.gridApi.selectAll();\n    const selectedUpdateNodes = this.gridApi.getSelectedNodes();\n    console.log(selectedUpdateNodes)\n    const selectedUpdateData = selectedUpdateNodes.map(node => node.data);\n    console.log(selectedUpdateData);\n    let gridSave = `[{\"yearWeek\": \"${this.state.yearWeek}\", \"userID\": \"Bob\", \"healthData\": ${JSON.stringify(selectedUpdateData)}}]`;\n    console.log(gridSave);\n\n    this.setState({gridData: gridSave})\n\n    this.replaceWeek(gridSave)\n    const selectedDataString = selectedUpdateData\n    .map(node => `yearWeek: ${this.state.yearWeek},  Day: ${node.day}, bpSystolic: ${node.bpSystolic}, bpDiastolic: ${node.bpDiastolic}, Weight: ${node.weight}, sugarAM: ${node.sugarAM}, sugarPM: ${node.sugarPM}, Sleep: ${node.sleep}, Notes: ${node.notes}`)\n      .join(', ');\n    ;\n  };\n\npickerHandler= (date)=> {\n  console.log(date)\n  let pickedDate = new Date(date).toJSON().substring(0, 4) + \"-\" + getWeek(date)\n  console.log(pickedDate)\n\n   this.setState({yearWeek: pickedDate},  this.getData)\n}\n\n  render() {\n    return (\n      <div\n        className=\"ag-theme-balham\"\n        style={{\n          height: '500px',\n          width: '1200px'\n        }}\n      >\n<Picker action={this.pickerHandler}></Picker>\n\n    <button type=\"button\" class=\"btn-info\" onClick={this.onReplaceButtonClick}>\n        Save Your Week\n    </button>\n\n    <button type=\"button\" class=\"btn-dark\" onClick={this.clearGrid}>\n    Clear the Grid\n    </button>\n\n    <button type=\"button\" class=\"btn-warning\" onClick={this.eraseWeek}>\n        Erase this Week \n    </button>\n\n\n\n        <AgGridReact\n          onGridReady={params => (this.gridApi = params.api)}\n          rowSelection=\"multiple\"\n          columnDefs={this.state.columnDefs}\n          rowData={this.state.rowData}\n          animateRows={this.state.animateRows}\n          rowHeight={this.state.rowHeight}\n        ></AgGridReact>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Podcasts\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Videos\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\ExerciseGrid\\index.js",["122"],"import React, { Component } from 'react';\nimport './style.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\nimport Picker from '../Picker'\nimport { getWeek } from 'date-fns'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      yearWeek: '',\n      gridData: '',\n      saveFlag: false,\n      columnDefs: [\n        {\n            headerName: 'Day',\n            field: 'day',\n            wrapText: true,\n            resizable: true,\n            // checkboxSelection: true,\n            width: 130,\n\n          },\n        {\n          headerName: 'Activity',\n          field: 'activity',\n          editable: true,\n          wrapText: true,\n          resizable: true,\n          width: 120,\n        },\n        {\n          headerName: 'Duration',\n          field: 'duration',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 100,\n        },\n        {\n          headerName: 'Intensity',\n          field: 'intensity',\n          wrapText: true,\n          resizable: true,\n          editable: true,\n          width: 100,\n        },\n        {\n            headerName: 'Mood',\n            field: 'mood',\n            wrapText: true,\n            resizable: true,\n            editable: true,\n            width: 100,\n          },\n          {\n            headerName: 'Notes',\n            field: 'notes',\n            wrapText: true,\n            resizable: true,\n            editable: true,\n            width: 600,\n          }\n      ],\n\n      rowData: [ ],\n\n    rowHeight: 60,\n    animateRows: true,\n    };\n  }\n\n  componentDidMount() {\n\n    let today = new Date();\n    let startYearWeek = today.toJSON().substring(0, 4) + \"-\" + getWeek(today)\n  \n    this.setState({yearWeek: startYearWeek}, this.getData)\n\n    }\n\n    getData = () =>{\n      fetch('/api/exercise/' + this.state.yearWeek, {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }})\n        .then(result => result.json())\n        .then(rowData => this.setState({ rowData:rowData.exerciseData }))\n        .then(saveFlag => this.setState({saveFlag: true}))\n        .catch((error)=>\n        {\n          fetch('template.json', {\n            headers : { \n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n             }})\n            .then(result => result.json())\n            .then(rowData => this.setState({ rowData }))\n            .then(saveFlag => this.setState({saveFlag: false}))\n        }\n        )\n    }\n\nclearGrid = () => {\n\n  fetch('template.json', {\n    headers : { \n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }})\n    .then(result => result.json())\n    .then(rowData => this.setState({ rowData }))\n    .then(saveFlag => this.setState({saveFlag: false}))\n}\n\n\n\n    saveWeek = (gridData) =>{\n      fetch('/api/exercise/', {\n        headers : {'Content-Type': 'application/json', 'Accept': 'application/json'},\n        method: 'POST',\n        body: gridData})\n        .then(result => result.json())\n        .then(rowData => this.setState({ rowData }))\n        .catch((error)=>{\n          console.log(error)\n    })\n    this.getData()\n    }\n    \n    eraseWeek = () =>{\n      fetch('/api/exercise/' + this.state.yearWeek, {\n        method: 'DELETE',\n      })\n        .then(result => result.text())\n        .then(result=> console.log(\"delete result: \" + result))\n        .catch((error)=>{\n          console.log(error)\n    })\n    this.getData()\n    }\n    \n    replaceWeek = (gridData) =>{\n      console.log(this.state.saveFlag)\n      if (!this.state.saveFlag) { this.saveWeek(gridData)\n      }\n      else {\n        this.eraseWeek()\n        this.saveWeek(gridData)\n      }\n    }\n    \n    onReplaceButtonClick = () => {\n      this.gridApi.selectAll();\n      const selectedUpdateNodes = this.gridApi.getSelectedNodes();\n      console.log(selectedUpdateNodes)\n      const selectedUpdateData = selectedUpdateNodes.map(node => node.data);\n      console.log(selectedUpdateData);\n      let gridSave = `[{\"yearWeek\": \"${this.state.yearWeek}\", \"userID\": \"Bob\", \"exerciseData\": ${JSON.stringify(selectedUpdateData)}}]`;\n      console.log(gridSave);\n  \n      this.setState({gridData: gridSave})\n  \n      this.replaceWeek(gridSave)\n      const selectedDataString = selectedUpdateData\n      .map(node => `Day: ${node.day}, Activity: ${node.activity}, Duration: ${node.duration}, Intensity: ${node.intensity}, Mood: ${node.mood}, Notes: ${node.notes}`)\n        .join(', ');\n      ;\n    };\n\n  pickerHandler= (date)=> {\n    console.log(date)\n    let pickedDate = new Date(date).toJSON().substring(0, 4) + \"-\" + getWeek(date)\n    console.log(pickedDate)\n  \n     this.setState({yearWeek: pickedDate},  this.getData)\n  }\n\n  render() {\n\n    return (\n      <div\n        className=\"ag-theme-balham\"\n        style={{\n          height: '500px',\n          width: '1200px'\n        }}\n      >\n<br></br>\n\n<Picker action={this.pickerHandler}></Picker>\n\n<button type=\"button\" class=\"btn-info\" onClick={this.onReplaceButtonClick}>\n        Save Your Week\n    </button>\n\n    <button type=\"button\" class=\"btn-dark\" onClick={this.clearGrid}>\n        Clear the Grid\n    </button>\n\n    <button type=\"button\" class=\"btn-warning\" onClick={this.eraseWeek}>\n        Erase this Week \n    </button>\n\n        <AgGridReact\n          onGridReady={params => (this.gridApi = params.api)}\n          rowSelection=\"multiple\"\n          columnDefs={this.state.columnDefs}\n          rowData={this.state.rowData}\n          animateRows={this.state.animateRows}\n          rowHeight={this.state.rowHeight}\n        ></AgGridReact>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\MyModal\\index.js",[],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\utils\\API.js",["123"],"import axios from \"axios\";\n\nexport default {\n  getQuote: function() {\n    return axios.get(\"https://type.fit/api/quotes\");\n  },\n\n    // Saves a week of Health information to the database\n    saveHealth: function(healthData) {\n      return axios.post(\"/api/health\", healthData);\n    }\n\n  \n};","C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Slider\\index.js",[],["124","125"],"C:\\Users\\fhsal\\Homework\\3-project\\evolve\\client\\src\\components\\Picker\\index.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":181,"column":11,"nodeType":"132","messageId":"133","endLine":181,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":168,"column":13,"nodeType":"132","messageId":"133","endLine":168,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":3,"column":1,"nodeType":"136","endLine":14,"endColumn":3},{"ruleId":"126","replacedBy":"137"},{"ruleId":"128","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'selectedDataString' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["139"],["140"],"no-global-assign","no-unsafe-negation"]